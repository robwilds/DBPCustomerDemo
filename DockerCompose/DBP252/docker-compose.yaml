# This Docker Compose file will spin up an ACS cluster on a local host.
# It requires a minimum of 13GB Memory to distribute among containers.
#
# For performance tuning, assign the container memory and give a percentage of
# it to the JVM. Use either the -Xms,-Xmx flags or the newly added flags in
# java 10+: -XX:MaxRAMPercentage and -XX:MinRAMPercentage.
# More details here:
# https://www.oracle.com/technetwork/java/javase/10-relnote-issues-4108729.html
#
# Note: The Docker Compose file from github.com is a limited trial that goes
# into read-only mode after 2 days. Get the latest compose.yaml file with
# a 30-day trial license by accessing the Alfresco Content Services trial
# download page at:
# https://www.alfresco.com/platform/content-services-ecm/trial/download
#
services:
  alfresco:
    #image: quay.io/alfresco/alfresco-content-repository:25.2.0
    image: quay.io/alfresco/alfresco-governance-repository-enterprise:25.2.0
    mem_limit: 1900m
    depends_on:
      - ldap
      - postgres
    environment:
      JAVA_TOOL_OPTIONS: >-
        -Dencryption.keystore.type=JCEKS
        -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
        -Dencryption.keyAlgorithm=DESede
        -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
        -Dmetadata-keystore.password=mp6yc0UD9e
        -Dmetadata-keystore.aliases=metadata
        -Dmetadata-keystore.metadata.password=oKIWzVdEdA
        -Dmetadata-keystore.metadata.algorithm=DESede
      JAVA_OPTS: >-
        -Dactiviti.client.extension.endpoint=http://process:8080/activiti-app
        -Dactiviti.client.extension.user=admin
        -Dactiviti.client.extension.password=admin
        -Ddb.driver=org.postgresql.Driver
        -Ddb.username=alfresco
        -Ddb.password=alfresco
        -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
        -Dindex.subsystem.name=elasticsearch
        -Delasticsearch.createIndexIfNotExists=true
        -Delasticsearch.host=elasticsearch
        -Delasticsearch.port=9200
        -Dshare.host=localhost
        -Dshare.port=8080
        -Dalfresco.host=localhost
        -Dalfresco.port=8080
        -Dcsrf.filter.enabled=false
        -Daos.baseUrlOverwrite=http://localhost:8080/alfresco/aos
        -Dmessaging.broker.url="failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true"
        -Ddeployment.method=DOCKER_COMPOSE
        -Dtransform.service.enabled=true
        -Dtransform.service.url=http://transform-router:8095
        -Dsfs.url=http://shared-file-store:8099/
        -DlocalTransform.core-aio.url=http://transform-core-aio:8090/
        -Ddsync.service.uris=http://localhost:9090/alfresco
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
    volumes:
      - ./data/services/content/alfresco-global.properties:/usr/local/tomcat/shared/classes/alfresco-global.properties
      - ./data/services/content/index.jsp:/usr/local/tomcat/webapps/ROOT/index.jsp
      - ./data/services/content/alfresco.css:/usr/local/tomcat/webapps/ROOT/alfresco.css
      - ./data/services/content/amps:/usr/local/tomcat/amps
      - alf_data:/usr/local/tomcat/alf_data/
      - type: bind
        source: ./data/services/content/license
        target: /usr/local/tomcat/shared/classes/alfresco/extension/license
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:8080/alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-",
        ]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 1m
    extends:
      file: commons/base.yaml
      service: alfresco
  transform-router:
    mem_limit: 512m
    image: quay.io/alfresco/alfresco-transform-router:4.2.0
    environment:
      JAVA_OPTS: >-
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
      ACTIVEMQ_URL: nio://activemq:61616
      CORE_AIO_URL: http://transform-core-aio:8090
      FILE_STORE_URL: >-
        http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file
    ports:
      - "8095:8095"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8095/actuator/health"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 20s
    depends_on:
      activemq:
        condition: service_healthy
      shared-file-store:
        condition: service_healthy
  transform-core-aio:
    image: quay.io/alfresco/alfresco-transform-core-aio:5.2.0
    mem_limit: 1536m
    environment:
      JAVA_OPTS: >-
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
      ACTIVEMQ_URL: nio://activemq:61616
      FILE_STORE_URL: >-
        http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file
    ports:
      - "8090:8090"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/ready"]
      interval: 20s
      timeout: 2s
      retries: 3
      start_period: 10s
    depends_on:
      activemq:
        condition: service_healthy
      shared-file-store:
        condition: service_healthy
  shared-file-store:
    image: quay.io/alfresco/alfresco-shared-file-store:4.2.0
    mem_limit: 512m
    environment:
      JAVA_OPTS: >-
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
      scheduler.content.age.millis: 86400000
      scheduler.cleanup.interval: 86400000
    ports:
      - "8099:8099"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8099/ready"]
      interval: 20s
      timeout: 2s
      retries: 3
      start_period: 10s
    volumes:
      - /tmp/Alfresco
  share:
    image: quay.io/alfresco/alfresco-governance-share-enterprise:25.2.0
    mem_limit: 1g
    environment:
      CSRF_FILTER_ORIGIN: http://localhost:8080
      CSRF_FILTER_REFERER: http://localhost:8080/share/.*
      REPO_HOST: "alfresco"
      REPO_PORT: "8080"
      JAVA_OPTS: >-
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
        -Dalfresco.host=localhost
        -Dalfresco.port=8080
        -Dalfresco.context=alfresco
        -Dalfresco.protocol=http
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/share"]
      interval: 20s
      timeout: 2s
      retries: 3
      start_period: 15s
    depends_on:
      alfresco:
        condition: service_healthy
    volumes:
      - ./data/services/share/amps:/usr/local/tomcat/amps_share
    extends:
      file: commons/base.yaml
      service: share
  postgres:
    image: postgres:16.5
    mem_limit: 512m
    environment:
      - POSTGRES_PASSWORD=alfresco
      - POSTGRES_USER=alfresco
      - POSTGRES_DB=alfresco
    command: postgres -c max_connections=300 -c log_min_messages=LOG
    ports:
      - "5432:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./data/services/postgres/create_database.sql:/docker-entrypoint-initdb.d/create_database.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
  elasticsearch:
    image: elasticsearch:8.17.3
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - elasticdata:/usr/share/elasticsearch/data
      - type: bind
        source: ./data/services/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -X GET http://localhost:9200/_cluster/health?pretty | grep status | grep -q '\\(green\\|yellow\\)'",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
  kibana:
    image: kibana:7.17.26
    mem_limit: 1g
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD", "curl", "-f", "-o", "/dev/null", "http://localhost:5601/status"]
      interval: 10s
      timeout: 2s
      retries: 5
      start_period: 30s
    #profiles:
    #  - disabled
    volumes:
      - kibanadata:/usr/share/kibana/data
  search:
    image: quay.io/alfresco/alfresco-elasticsearch-live-indexing:5.1.1
    mem_limit: 1g
    environment:
      ALFRESCO_ACCEPTED_CONTENT_MEDIA_TYPES_CACHE_BASE_URL: >-
        http://transform-core-aio:8090/transform/config
      ALFRESCO_SHAREDFILESTORE_BASEURL: >-
        http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file/
      SPRING_ACTIVEMQ_BROKERURL: nio://activemq:61616
      SPRING_ELASTICSEARCH_REST_URIS: http://elasticsearch:9200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 20s
      timeout: 2s
      retries: 3
      start_period: 20s
    depends_on:
      elasticsearch:
        condition: service_healthy
      transform-core-aio:
        condition: service_healthy
      shared-file-store:
        condition: service_healthy
  search-reindexing:
    image: quay.io/alfresco/alfresco-elasticsearch-reindexing:5.1.1
    mem_limit: 1g
    restart: on-failure:5
    environment:
      ALFRESCO_ACCEPTED_CONTENT_MEDIA_TYPES_CACHE_BASE_URL: >-
        http://transform-core-aio:8090/transform/config
      SPRING_ACTIVEMQ_BROKERURL: nio://activemq:61616
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/alfresco
      SPRING_DATASOURCE_USERNAME: alfresco
      SPRING_DATASOURCE_PASSWORD: alfresco
      SPRING_ELASTICSEARCH_REST_URIS: http://elasticsearch:9200
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      alfresco:
        condition: service_healthy
  activemq:
    image: quay.io/alfresco/alfresco-activemq:5.18-jre17-rockylinux8
    mem_limit: 1g
    ports:
      - "8161:8161" # Web Console
      - "5672:5672" # AMQP
      - "61616:61616" # OpenWire
      - "61613:61613" # STOMP
    healthcheck:
      test:
        [
          "CMD",
          "/opt/activemq/bin/activemq",
          "query",
          "--objname",
          "type=Broker,brokerName=*,service=Health",
          "|",
          "grep",
          "Good",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
  audit-storage:
    image: quay.io/alfresco/alfresco-audit-storage:1.1.0
    mem_limit: 512m
    environment:
      SPRING_ACTIVEMQ_BROKERURL: failover:(nio://activemq:61616)?timeout=3000
      AUDIT_ENTRYSTORAGE_OPENSEARCH_CONNECTOR_URI: http://elasticsearch:9200
      AUDIT_ENTRYSTORAGE_OPENSEARCH_CONNECTOR_USERNAME: admin
      AUDIT_ENTRYSTORAGE_OPENSEARCH_CONNECTOR_PASSWORD: admin
      AUDIT_EVENTINGESTION_URI: activemq:topic:alfresco.repo.event2
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:8081/actuator/health/readiness"]
      interval: 60s
      timeout: 2s
      retries: 3
      start_period: 15s
    depends_on:
      activemq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
  digital-workspace:
    image: quay.io/alfresco/alfresco-digital-workspace:7.1.0
    mem_limit: 128m
    environment:
      APP_CONFIG_PROVIDER: "ALL"
      APP_CONFIG_AUTH_TYPE: "BASIC"
      BASE_PATH: ./workspace
      APP_CONFIG_PLUGIN_PROCESS_SERVICE: "true"
      APP_CONFIG_PLUGIN_MICROSOFT_ONLINE: "false"
      APP_BASE_SHARE_URL: "http://localhost:8080/share/#/preview/s"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 1s
    extends:
      file: commons/base.yaml
      service: digital-workspace
  control-center:
    image: quay.io/alfresco/alfresco-control-center:10.0.0
    mem_limit: 128m
    environment:
      APP_CONFIG_PROVIDER: "ECM"
      APP_CONFIG_AUTH_TYPE: "BASIC"
      BASE_PATH: ./
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 1s
    profiles:
      - donotstart
    extends:
      file: commons/base.yaml
      service: control-center
  proxy:
    extends:
      file: commons/base.yaml
      service: proxy
  sync-service:
    image: quay.io/alfresco/service-sync:5.2.0
    mem_limit: 1g
    environment:
      JAVA_OPTS: >-
        -Dsync.cluster.enabled=false
        -Dsql.db.driver=org.postgresql.Driver
        -Dsql.db.url=jdbc:postgresql://postgres:5432/alfresco
        -Dsql.db.username=alfresco
        -Dsql.db.password=alfresco
        -Dmessaging.broker.host=activemq
        -Drepo.hostname=alfresco
        -Drepo.port=8080
        -Ddw.server.applicationConnectors[0].type=http
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/alfresco/healthcheck"]
      interval: 30s
      timeout: 2s
      retries: 3
      start_period: 20s
    depends_on:
      postgres:
        condition: service_healthy
      alfresco:
        condition: service_healthy
    extends:
      file: commons/base.yaml
      service: sync-service
  process:
    image: alfresco/process-services:24.1.0
    ports:
      - 8094:8080
    depends_on:
      alfresco:
        condition: service_healthy
    #environment:
    #  - EXTERNAL_ACTIVITI_APP_PROPERTIES_FILE=activiti-app.properties
    volumes:
      - ./data/services/process/configs/activiti-app/activiti-app.properties:/usr/local/tomcat/lib/activiti-app.properties
      - ./data/services/process/configs/activiti-app/activiti-ldap.properties:/usr/local/tomcat/lib/activiti-ldap.properties
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.process.rule=PathPrefix(`/activiti-app`)"
      - "traefik.http.services.process.loadbalancer.server.port=8080"
    #profiles:
    #  - disabled
  processadmin:
    image: alfresco/process-services-admin:24.1.0
    environment:
      - ACTIVITI_ADMIN_EXTERNAL_PROPERTIES_FILE=activiti-admin.properties
    volumes:
      - ./data/services/process/configs/activiti-admin/activiti-admin.properties:/usr/local/tomcat/lib/activiti-admin.properties
    ports:
      - 8096:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.processadmin.rule=PathPrefix(`/activiti-admin`)"
      - "traefik.http.services.processadmin.loadbalancer.server.port=8080"
    #profiles:
    #  - disabled
  ##########CUSTOM SERVICES BELOW##########
  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    #profiles:
    #  - disabled
  ldap:
    image: bitnami/openldap:latest
    ports:
      - 389:389
      - 636:636
    environment:
      - LDAP_PORT_NUMBER=389
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=admin
      - LDAP_ADMIN_DN=cn=admin,dc=example,dc=com
      - LDAP_ROOT=dc=example,dc=com
      - LDAP_USERS=demo
      - LDAP_PASSWORDS=demo
      - LDAP_PASSWORD_HASH={CLEARTEXT}
      - LDAP_CUSTOM_LDIF_DIR=/home
    volumes:
      - ./data/services/bitnamildap:/bitnami/openldap
      - type: bind
        source: ./data/services/bitnamildap/init.ldif
        target: /home/init.ldif
  ldapadmin:
    image: osixia/phpldapadmin:0.9.0
    environment:
      - PHPLDAPADMIN_LDAP_HOSTS=ldap
      - PHPLDAPADMIN_HTTPS=false
    ports:
      - 6443:443
      - 8400:80
  email:
    #image: apache/james:memory-latest
    image: apache/james:demo-3.8.2
    ports:
      - 25:25
      - 465:465
      - 993:993
      - 143:143
      - 8500:8000
    volumes:
      #- ./data/services/email/domainlist.xml:/root/conf/domainlist.xml
      - ./data/services/email/initialdata.sh:/root/initialdata.sh
      - type: bind
        source: ./data/services/email/derby/
        target: /var/store/
  webmail:
    image: hardware/rainloop:latest
    volumes:
      - ./data/services/webmail:/rainloop/data
    ports:
      - 8800:8888
    depends_on:
      - email

volumes:
  alf_data:
  postgresdata:
  elasticdata:
  kibanadata:
  shared-file-store-volume:
    driver_opts:
      type: tmpfs
      device: tmpfsx
  openldap_data:
